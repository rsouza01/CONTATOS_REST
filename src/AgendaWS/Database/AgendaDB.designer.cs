#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AgendaWS.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AGENDA")]
	public partial class AgendaDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertESTADO(ESTADO instance);
    partial void UpdateESTADO(ESTADO instance);
    partial void DeleteESTADO(ESTADO instance);
    partial void InsertCONTATO(CONTATO instance);
    partial void UpdateCONTATO(CONTATO instance);
    partial void DeleteCONTATO(CONTATO instance);
    #endregion
		
		public AgendaDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["AGENDAConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AgendaDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AgendaDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AgendaDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AgendaDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ESTADO> ESTADOs
		{
			get
			{
				return this.GetTable<ESTADO>();
			}
		}
		
		public System.Data.Linq.Table<CONTATO> CONTATOs
		{
			get
			{
				return this.GetTable<CONTATO>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ESTADOS")]
	public partial class ESTADO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRICAO;
		
		private string _SIGLA;
		
		private EntitySet<CONTATO> _CONTATOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRICAOChanging(string value);
    partial void OnDESCRICAOChanged();
    partial void OnSIGLAChanging(string value);
    partial void OnSIGLAChanged();
    #endregion
		
		public ESTADO()
		{
			this._CONTATOs = new EntitySet<CONTATO>(new Action<CONTATO>(this.attach_CONTATOs), new Action<CONTATO>(this.detach_CONTATOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRICAO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DESCRICAO
		{
			get
			{
				return this._DESCRICAO;
			}
			set
			{
				if ((this._DESCRICAO != value))
				{
					this.OnDESCRICAOChanging(value);
					this.SendPropertyChanging();
					this._DESCRICAO = value;
					this.SendPropertyChanged("DESCRICAO");
					this.OnDESCRICAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIGLA", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string SIGLA
		{
			get
			{
				return this._SIGLA;
			}
			set
			{
				if ((this._SIGLA != value))
				{
					this.OnSIGLAChanging(value);
					this.SendPropertyChanging();
					this._SIGLA = value;
					this.SendPropertyChanged("SIGLA");
					this.OnSIGLAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTADO_CONTATO", Storage="_CONTATOs", ThisKey="ID", OtherKey="ESTADOID")]
		public EntitySet<CONTATO> CONTATOs
		{
			get
			{
				return this._CONTATOs;
			}
			set
			{
				this._CONTATOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CONTATOs(CONTATO entity)
		{
			this.SendPropertyChanging();
			entity.ESTADO = this;
		}
		
		private void detach_CONTATOs(CONTATO entity)
		{
			this.SendPropertyChanging();
			entity.ESTADO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONTATOS")]
	public partial class CONTATO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NOME;
		
		private string _ENDERECO;
		
		private string _COMPLEMENTO;
		
		private string _BAIRRO;
		
		private string _MUNICIPIO;
		
		private int _ESTADOID;
		
		private string _CEP;
		
		private string _TELEFONE;
		
		private EntityRef<ESTADO> _ESTADO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNOMEChanging(string value);
    partial void OnNOMEChanged();
    partial void OnENDERECOChanging(string value);
    partial void OnENDERECOChanged();
    partial void OnCOMPLEMENTOChanging(string value);
    partial void OnCOMPLEMENTOChanged();
    partial void OnBAIRROChanging(string value);
    partial void OnBAIRROChanged();
    partial void OnMUNICIPIOChanging(string value);
    partial void OnMUNICIPIOChanged();
    partial void OnESTADOIDChanging(int value);
    partial void OnESTADOIDChanged();
    partial void OnCEPChanging(string value);
    partial void OnCEPChanged();
    partial void OnTELEFONEChanging(string value);
    partial void OnTELEFONEChanged();
    #endregion
		
		public CONTATO()
		{
			this._ESTADO = default(EntityRef<ESTADO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NOME
		{
			get
			{
				return this._NOME;
			}
			set
			{
				if ((this._NOME != value))
				{
					this.OnNOMEChanging(value);
					this.SendPropertyChanging();
					this._NOME = value;
					this.SendPropertyChanged("NOME");
					this.OnNOMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENDERECO", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string ENDERECO
		{
			get
			{
				return this._ENDERECO;
			}
			set
			{
				if ((this._ENDERECO != value))
				{
					this.OnENDERECOChanging(value);
					this.SendPropertyChanging();
					this._ENDERECO = value;
					this.SendPropertyChanged("ENDERECO");
					this.OnENDERECOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPLEMENTO", DbType="VarChar(50)")]
		public string COMPLEMENTO
		{
			get
			{
				return this._COMPLEMENTO;
			}
			set
			{
				if ((this._COMPLEMENTO != value))
				{
					this.OnCOMPLEMENTOChanging(value);
					this.SendPropertyChanging();
					this._COMPLEMENTO = value;
					this.SendPropertyChanged("COMPLEMENTO");
					this.OnCOMPLEMENTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAIRRO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BAIRRO
		{
			get
			{
				return this._BAIRRO;
			}
			set
			{
				if ((this._BAIRRO != value))
				{
					this.OnBAIRROChanging(value);
					this.SendPropertyChanging();
					this._BAIRRO = value;
					this.SendPropertyChanged("BAIRRO");
					this.OnBAIRROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MUNICIPIO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MUNICIPIO
		{
			get
			{
				return this._MUNICIPIO;
			}
			set
			{
				if ((this._MUNICIPIO != value))
				{
					this.OnMUNICIPIOChanging(value);
					this.SendPropertyChanging();
					this._MUNICIPIO = value;
					this.SendPropertyChanged("MUNICIPIO");
					this.OnMUNICIPIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTADOID", DbType="Int NOT NULL")]
		public int ESTADOID
		{
			get
			{
				return this._ESTADOID;
			}
			set
			{
				if ((this._ESTADOID != value))
				{
					if (this._ESTADO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnESTADOIDChanging(value);
					this.SendPropertyChanging();
					this._ESTADOID = value;
					this.SendPropertyChanged("ESTADOID");
					this.OnESTADOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEP", DbType="Char(8) NOT NULL", CanBeNull=false)]
		public string CEP
		{
			get
			{
				return this._CEP;
			}
			set
			{
				if ((this._CEP != value))
				{
					this.OnCEPChanging(value);
					this.SendPropertyChanging();
					this._CEP = value;
					this.SendPropertyChanged("CEP");
					this.OnCEPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEFONE", DbType="VarChar(50)")]
		public string TELEFONE
		{
			get
			{
				return this._TELEFONE;
			}
			set
			{
				if ((this._TELEFONE != value))
				{
					this.OnTELEFONEChanging(value);
					this.SendPropertyChanging();
					this._TELEFONE = value;
					this.SendPropertyChanged("TELEFONE");
					this.OnTELEFONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTADO_CONTATO", Storage="_ESTADO", ThisKey="ESTADOID", OtherKey="ID", IsForeignKey=true)]
		public ESTADO ESTADO
		{
			get
			{
				return this._ESTADO.Entity;
			}
			set
			{
				ESTADO previousValue = this._ESTADO.Entity;
				if (((previousValue != value) 
							|| (this._ESTADO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESTADO.Entity = null;
						previousValue.CONTATOs.Remove(this);
					}
					this._ESTADO.Entity = value;
					if ((value != null))
					{
						value.CONTATOs.Add(this);
						this._ESTADOID = value.ID;
					}
					else
					{
						this._ESTADOID = default(int);
					}
					this.SendPropertyChanged("ESTADO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
